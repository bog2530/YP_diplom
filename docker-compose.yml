version: '3'

x-default: &default
  restart: always
  env_file:
    - .env
  networks:
    - backend-network
    - jaeger-network

x-celery-default: &celery-default
  <<: *default
  build: etl-processes


services:
  service:
    <<: *default
    build: admin-panel
    volumes:
      - django-static:/opt/app/static
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-123123}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-mail@mail.ru}
    depends_on:
      - postgres
    networks:
      - backend-network

  postgres:
    <<: *default
    image: postgres:16.6
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-app}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-123qwe}
      - POSTGRES_DB=${POSTGRES_DB:-movies_database}
    volumes:
      - ./database_dump.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  celery-default:
    <<: *celery-default
    command: [ "python", "-m", "celery", "-A", "scheduler", "worker", "-Q", "default", "-l", "info" ]
    depends_on:
      - celery-beat
      - elasticsearch
      - postgres

  celery-beat:
    <<: *celery-default
    command: [ "python", "-m", "celery", "-A", "scheduler", "beat", "-l", "info" ]

  redis-backend:
    <<: *default
    image: redis
    container_name: redis-backend
    ports:
      - "6379:6379"
    volumes:
      - redis-backend:/data

  movie-api:
    <<: *default
    build: fastapi-solution
    container_name: movie-api
    ports:
      - "5290:5000"

  redis-movie:
    <<: *default
    image: redis
    container_name: redis-movie
    ports:
      - "6380:6379"
    volumes:
      - redis-movie:/data

  elasticsearch:
    <<: *default
    image: elasticsearch:8.6.2
    environment:
      ES_JAVA_OPTS: "-Xms1m -Xmx1g"
      discovery.type: "single-node"
      xpack.security.enabled: false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
    ports:
      - "9200:9200"

  es-init:
    <<: *default
    image: appropriate/curl:latest
    restart: no
    depends_on:
      - elasticsearch
    volumes:
      - ./es-schemas:/data
    entrypoint: [ "/bin/sh", "/data/init.sh" ]

  jaeger:
    <<: *default
    image: jaegertracing/all-in-one:1.42
    ports:
      - "5775:5775"
      - "6831:6831"
      - "6832:6832"
      - "5778:5778"
      - "14268:14268"
      - "14250:14250"
      - "16686:16686"
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    networks:
      - jaeger-network
      - backend-network

  alisa:
    <<: *default
    build: alisa
    container_name: alisa
    ports:
      - "5292:8000"

  actions-server:
    <<: *default
    build: actions_rasa
    container_name: actions_rasa
    ports:
      - "5291:5055"

  rasa:
    <<: *default
    build: dialog
    container_name: rasa
    ports:
      - "5005:5005"
    volumes:
      - rasa-models:/app/models/

  redis-rasa:
    <<: *default
    image: redis
    container_name: redis-rasa
    ports:
      - "6381:6379"
    volumes:
      - redis-rasa:/data





volumes:
  elasticsearch-data:
  redis-movie:
  redis-rasa:
  redis-backend:
  rasa-models:
  pgdata:
  django-static:

networks:
  backend-network:
    driver: bridge
  jaeger-network:
    driver: bridge
